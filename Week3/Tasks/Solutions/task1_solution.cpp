// УП-практикум, спец.Информатика, 6-та група, Седмица 3
// Проверка за четност на число чрез побитово &
#include <iostream>
using namespace std;

int main(){
  int x;
  cout << "x=";
  cin  >> x;
  // Нека за пример да вземем числото 5, неговото двоично представяне
  // е 0101 (всъщност се записва с 16 бита, но за простота ще
  // използваме само 4).  Дали едно число е четно или не се определя
  // от последния му бит:
  //            101 -> 2^2*1 + 2^1*0 + 2^0*1 = 4 + 0 + 1
  // Забележете, че тъй като накрая имаме събираемо (+ 1), това ни дава нечетното число 5.
  // Ако вземем числото 4 за него имаме следния двоичен запис -> 0100:
  //            100 -> 2^2*1 + 2^1*0 + 2^0*0 = 4 + 0 + 0
  // Тук като последното събираемо е (+ 0), това ни дава четното число 4.
  // Идеята за решението на задачата е да проверим дали последния бит (най-младшият) е 0
  // (за четно число), или 1 (за нечетно число).
  // Използваме числото 1 за тази проверка тъй като неговия довоичен запис е 0001 и
  // прилагайки операцията & над даденото x и него получаваме, както следва:
  // За 5: 0101 & 0001 -> 0001 => числото е нечетно
  // За 4: 0100 & 0001 -> 0000 => числото е четно
  if(x&1){
    cout << x << " is odd\n";
  } else {
    cout << x << " is even\n";
  }
  return 0;
}
