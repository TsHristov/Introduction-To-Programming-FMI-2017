// УП-практикум, спец.Информатика, 6-та група, Седмица 1
// Решение на Задача 3:

#include <iostream>
using namespace std;

// Функция, която по даден низ от 0 и 1
// връща число в десетична бройна система:
int to_decimal(char binary[], int size=9)
{
  // Тук ще натрупваме резулата от
  // събирането на степените на двойката:
  int decimal = 0;

  // Итерираме масива, стартирайки от индекс 0 до индекс
  // size-1, тъй като на индекс size се намира
  // терминиращия символ за край на символен низ '\0':
  for(int i = 0; i < size - 1; i++){
    // Ако символа от поредицата е 0, то
    // той не носи принос към резултата,
    // затова отиваме на следващата итерация с 'continue':
    if(binary[i] == '0') continue;
    if(binary[i] == '1'){
      // Когато символа от поредицата е 1, то
      // прибавяме към резултата 2 на степен позицията
      // на която се намира 1-цата:
      decimal += (1 << (7-i)); // Конструкцията: 1 << n, повдига числото 2 на степен n.
    }
  }
  // Връщаме полученото десетично число,
  // като резултат на функцията:
  return decimal;
}

int main()
{
  // Инициализираме двумерен char масив с предварително зададени размери.
  char binary_code[11][9] = {"01001000", "01100101", "01101100", "01101100", "01101111",
			     "00100000", "01010111", "01101111", "01110010", "01101100", "01100100"};

  // Инициализираме с 0-ли едномерен char масив с предварително зададен размер,
  // който ще съдържа декодираното съобщение:
  char message[11] = {0,};

  // Итерираме масива стартирайки от индекс 0 до индекс 10 (включително).
  for(int i = 0; i < 11; i++)
  {
    // На индекс i записваме десетичното представяне на двоичния код,
    // (автоматично cast-ване към char).
    message[i]  =  to_decimal(binary_code[i]);
  }
  
  // Елемента намиращ се на индекс 11 е терминиращия символ '\0':
  message[11] = '\0';

  // Изкарва на конзолния изход декодираното събощение:
  cout << message << "\n";
  return 0;
}
